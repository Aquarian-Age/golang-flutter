/*
 * The code is automatically generated by the Goland.
 * Copyright © Aquarian-Age. All Rights Reserved.
 * Licensed under MIT.
 */

package main

import (
	"flag"
	"fmt"
	"liangzi.local/qx/pkg/luqin"
	"liangzi.local/qx/pkg/yq"
	"log"
	"strconv"
	"time"
)

var (
	times, man, woman string
)

func main() {
	flag.Usage = func() {
		fmt.Printf("Usage luqin -time 1465-04-18-19\n")
		flag.PrintDefaults()
	}
	flag.StringVar(&times, "time", "", "1465-04-18-19")
	flag.StringVar(&man, "man", "", "星日马")
	flag.StringVar(&woman, "woman", "", "井木犴")
	flag.Parse()

	ys, ms, ds, hs := times[:4], times[5:7], times[8:10], times[11:13]
	year := conv(ys)
	month := conv(ms)
	day := conv(ds)
	hour := conv(hs)

	if len(man) == 9 && len(woman) == 9 {
		fmt.Printf("男方:%s\n女方:%s\n", man, woman)
	}
	luQinFunc(year, month, day, hour, man, woman)
}
func luQinFunc(year, month, day, hour int, starA, starB string) {
	lq := luqin.NewLuQin(year, month, day, hour)
	zhiArr, nameArr := lq.ShiErGongArr()

	fmt.Printf("阳历:%d年-%d月-%d日-%d时\n", year, month, day, hour)
	fmt.Printf("干支:%s-%s-%s-%s\n", lq.Ygz, lq.Mgz, lq.Dgz, lq.Hgz)
	fmt.Printf("月将:%s\n", lq.YueJiang)
	fmt.Printf("阴历:%s\n", lq.MoonString)
	fmt.Println("--------------")
	t := time.Date(year, time.Month(month), day, hour, 0, 0, 0, time.Local)
	week := int(t.Weekday())
	if week == 0 { //0周日
		week = 7
	}
	//禽星
	nianQin := yq.GetNianQin(year)
	yueQin := yq.GetYueQin(nianQin, lq.Mgz)
	riQin := yq.GetRiQin(week, lq.Dgz)
	shiQin := yq.GetShiQin(riQin, lq.Hgz)
	fmt.Printf("年禽:%s\n月禽:%s\n日禽:%s\n时禽:%s\n", nianQin, yueQin, riQin, shiQin)
	fmt.Println("--------------")
	fmt.Printf("主宫:%s\n", lq.ZhuGong)
	fmt.Printf("主星(胎星): %s\n", lq.ZhuXing)
	fmt.Printf("命宫:%s\n", lq.MingGong)
	fmt.Printf("命星:%s\n", lq.MingXing)
	fmt.Printf("身宫:%s\n", lq.ShenGong)
	fmt.Printf("身星:%s\n", lq.ShenXing)
	fmt.Printf("阴宫:%s\n", lq.YinGong)
	fmt.Printf("阴星:%s\n", lq.YinXing)
	fmt.Printf("息宫:%s\n", lq.XiGong)
	fmt.Printf("息星:%s\n", lq.XiXing)
	fmt.Println("--------------")
	//
	for i := 0; i < len(zhiArr); i++ {
		fmt.Printf("%s宫:%s\n", nameArr[i], lq.YinShouArr[i])
	}
	fmt.Println("--------------")
	fmt.Printf("福德宫禽星:%s\n", lq.FuDeXing)
	fmt.Printf("田宅宫禽星:%s\n", lq.TianZhaiXing)
	fmt.Printf("官禄宫禽星:%s\n", lq.GuanLuXing)
	fmt.Printf("迁移宫禽星:%s\n", lq.QianYiXing)
	fmt.Printf("疾厄宫禽星:%s\n", lq.JiErXing)

	if len(man) == 9 && len(woman) == 9 {
		hesuS := lq.FuFuHeSu(starA, starB)
		fmt.Printf("夫妇合宿:%s\n", hesuS)
	}
	fmt.Printf("月建数组:%s\n", lq.YinShouArr)
	fmt.Printf("本元禽星数组:%s\n", lq.StarArr)
}
func conv(s string) int {
	i, err := strconv.Atoi(s)
	if err != nil {
		log.Println(err)
	}
	return i
}
